@model FinalProject.Models.Users

@{
    ViewData["Title"] = "Details";
}

    <head>
        <title>Chart Display</title>

    </head>

    <body onload="requestJSONData();">
        <h2>Details</h2>
        <div>
            <hr />
            <fieldset>
                <legend>
                    User details:
                    <dl class="dl-horizontal" align="left">
                        <dt align="left">
                            Username:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Username)
                        </dd>
                        <dt align="left">
                            Initial balance:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Amount)
                        </dd>
                        <dt align="left">
                            Member since:
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Created_At)
                        </dd>
                    </dl>
                </legend>
            </fieldset>
        </div>
        <table border="1px solid black" ;>
            <tr>
                <th> Symbol </th>
                <th> Current Shares </th>
                <th> Amount Invested </th>
                <th> Price </th>
                <th> Current Shares (this can be adjusted) </th>
                <th> Change Investments? </th>
            </tr>
            @using System.Net;
            @using Newtonsoft.Json;
            @foreach (var item in Model.StockPurchaseEntry)
            {


                string Id = item.Company_Name.ToString();
                string Purchased_Amount = item.Purchased_Amount.ToString();
                string Amount_Paid = item.Amount_Paid.ToString();
                string Created_At = item.Created_At.ToString();
        

                var coinString = Id;
                var uri = $"https://min-api.cryptocompare.com/data/pricemulti?fsyms={coinString}&tsyms=USD";

                WebClient client = new WebClient();
                string rawData = client.DownloadString(uri);

                dynamic stuff = JsonConvert.DeserializeObject(rawData);
                string price = stuff[Id].USD;


                    <tr>
                        <td id=CompSymbol1>@Html.DisplayFor(modelItem => Id)</td>
                        <td id=CompCurPrice1>@Html.DisplayFor(modelItem => Purchased_Amount)</td>
                        <td id=UserInvestment1>@Html.DisplayFor(modelItem => Amount_Paid)</td>
                        <td id=UserEarnings1>@Html.DisplayFor(modelItem => price)</td>
                        <td id=UserEarnings1>@Html.DisplayFor(modelItem => Created_At)</td>
                        <td><input type="text" id=CompCurrShares1></td>
                    </tr>
        }
        </table>
        <input align="center" type="button" id="updateBtn" onclick="updateUserDataFromChart()" value="UPDATE" />
        <h1 align="center"> Your Chart </h1>
        <canvas id="displayChart" width='1000px' height='800px' style='border:1px solid #000000;'>
            Your browser does not support html5
        </canvas>
        <p></p>
        <div align="center">
          <input align="center" type="button" id="pieChart" value="PIE" />
          <input align="center" type="button" id="barChart" value="BAR" />
          <input align="center" type="button" id="lineChart" value="LINE" />
          <p></p>
          <a asp-action="Index">Logout</a>
        </div>

    </body>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <script type="text/javascript" src="~/js/site.js"></script>

@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Tax Type');
            data.addColumn('number', 'Tax Percentage');
            data.addRows([
                ['Soc. Sec. Tax', { v: 30, f: '30%' }],
                ['Income Tax', { v: 35, f: '35%' }],
                ['Borrowing', { v: 15, f: '15%' }],
                ['Corp. Tax', { v: 12, f: '12%' }],
                ['Misc', { v: 8, f: '8%' }]
            ]);

            // Simple Pie Chart:
            var option = {
                title: 'Tax Structure in US',
                width: 500,
                height: 400
            };

            var chart = new google.visualization.PieChart(document.getElementById('chart1'));
            chart.draw(data, option);

            //3D Pie Chart:
            option.is3D = true;
            chart = new google.visualization.PieChart(document.getElementById('chart2'));
            chart.draw(data, option);

            // Exploded Pie Chart:
            option.is3D = false;
            option.slices = {
                1: { offset: 0.3 },
                3: { offset: 0.5 }
            };
            chart = new google.visualization.PieChart(document.getElementById('chart3'));
            chart.draw(data, option);

            // Exploded 3D Pie Chart:
            option.is3D = true;
            chart = new google.visualization.PieChart(document.getElementById('chart4'));
            chart.draw(data, option);
        }
    </script>
}
